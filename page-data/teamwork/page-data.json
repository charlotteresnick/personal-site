{"componentChunkName":"component---src-templates-post-query-tsx","path":"/teamwork","result":{"data":{"post":{"__typename":"MdxPost","slug":"/teamwork","title":"Week Nine - Team Building","date":"09.04.2020","tags":[{"name":"Projects","slug":"projects"},{"name":"React","slug":"react"},{"name":"Chakra UI","slug":"chakra-ui"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Week Nine - Team Building\",\n  \"date\": \"2020-09-04T00:00:00.000Z\",\n  \"slug\": \"/teamwork\",\n  \"redirects\": [\"/where-to-watch\"],\n  \"tags\": [\"Projects\", \"React\", \"Chakra UI\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Week nine has been all group work. My team decided to build a React app with an Express back end that'll allow users to save their streaming service subscriptions, search for any given movie or show, and view exactly which services they can watch it on. We\\u2019re also throwing in some basic CRUD functionality; users can create collections, save movies/shows to their collections, and update collection names as well as delete either the contents of collections or an entire collection.\"), mdx(\"p\", null, \"Before we started, my team decided to use a component library to tackle our UI; we decided on \", mdx(\"a\", {\n    \"href\": \"https://chakra-ui.com/\",\n    \"parentName\": \"p\"\n  }, \"Chakra\"), \". With Chakra, I can handle styling directly in React without css. Chakra has all sorts of components and custom themes to experiment with and has proven to be an exciting challenge. A component I\\u2019m most proud of was a modal we used on our register page for users to select their streaming services; it\\u2019s a product of a \\u201Chow cool would it be if\\u201D moment I ran with. That said, it was an easy win and the results are pretty cool...in my opinion.\"), mdx(\"p\", null, \"Initially, I set the widgets in the modal to have a dark purple halo around them. But what if the Netflix widget could be red? And what if the Disney Plus widget could be blue? I was determined so I found Fast Average Color, an npm library that calculates the average color from an image (also works on videos), and got to work.\"), mdx(\"p\", null, \"And here\\u2019s what I threw together!\"), mdx(\"p\", null, \"Before: lights off:\"), mdx(\"img\", {\n    src: \"/images/modal2.png\",\n    alt: \"Halo-less modal\",\n    width: \"100%\"\n  }), mdx(\"p\", null, \"After: lights on:\"), mdx(\"img\", {\n    src: \"/images/modal.png\",\n    alt: \"Halo-ed modal\",\n    width: \"100%\"\n  }), mdx(\"p\", null, \"I ran into a couple problems when trying to implement Fast Average Color. So I decided to run it in a separate file and then plugged the colors into the subscription service objects. Regardless, I'm happy with how the modal turned out and how the entire project's turning out.\"), mdx(\"p\", null, \"Take a look at our repo \", mdx(\"a\", {\n    \"href\": \"https://github.com/charlotteresnick/where2watch\",\n    \"parentName\": \"p\"\n  }, \"here\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Week nine has been all group work. My team decided to build a React app with an Express back end that'll allow users to save their streamingâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/teamwork","formatString":"MM.DD.YYYY"}},"staticQueryHashes":["2849846852","2849846852","318001574"]}