{"componentChunkName":"component---src-templates-post-query-tsx","path":"/holy-sql","result":{"data":{"post":{"__typename":"MdxPost","slug":"/holy-sql","title":"Week Six - Project Two & A Big SQL Query","date":"08.14.2020","tags":[{"name":"Projects","slug":"projects"},{"name":"SQL","slug":"sql"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Week Six - Project Two & A Big SQL Query\",\n  \"date\": \"2020-08-14T00:00:00.000Z\",\n  \"slug\": \"/holy-sql\",\n  \"redirects\": [\"/drink-finder\"],\n  \"tags\": [\"Projects\", \"SQL\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I\\u2019ve been in full project mode all week and got a chance to really flex my SQL muscles again when I was creating a dropdown button that would display a user\\u2019s collections on the bottom of a queried drink recipe. It seemed easy in theory and proved a lot harder in execution. Here\\u2019s what I was going for:\"), mdx(\"p\", null, \"I've searched for an Old Fashioned recipe and found one! But when I click the + button at the bottom of the recipe, I have nowhere to save it because I haven't created a collection yet.\"), mdx(\"img\", {\n    src: \"/images/drinkfinder.png\",\n    alt: \"Empty collections dropdown menu\",\n    width: \"100%\"\n  }), mdx(\"p\", null, \"And look at that! Now that I have a collection set up and this recipe isn't in it, the name's rendering in the dropdown!\"), mdx(\"img\", {\n    src: \"/images/drinkfinder1.png\",\n    alt: \"Populated collections dropdown menu\",\n    width: \"100%\"\n  }), mdx(\"p\", null, \"I gave the collection name a click and viola! The recipe has been saved and I can take a look at it whenever I'd like.\"), mdx(\"img\", {\n    src: \"/images/drinkfinder2.png\",\n    alt: \"Recipe in collection\",\n    width: \"100%\"\n  }), mdx(\"p\", null, \"Simple, right? The query doesn\\u2019t look so simple and was a bit of a monster to write.\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-js\",\n    \"metastring\": \"{4-12}\",\n    \"{4-12}\": true,\n    \"parentName\": \"pre\"\n  }, \"static getByUserIdAndDrinkId(user_id, drink_id) {\\n    return db\\n    .query(`\\n    SELECT id, name, bool_or(drink_exists) as \\\"drink_exists\\\" FROM\\n      (SELECT c.id, c.name,\\n        CASE WHEN s.drink_id = $1\\n          THEN TRUE\\n          ELSE FALSE\\n        END drink_exists\\n      FROM collections c LEFT JOIN saves s on s.collection_id = c.id\\n      WHERE c.user_id = $2) as saves\\n    GROUP BY saves.id, saves.name;\\n    `, [drink_id, user_id])\\n    .then((collections) => collections.map((collection) => new this(collection)));\\n  }\\n\")), mdx(\"p\", null, \"And that's that! Here\\u2019s a \", mdx(\"a\", {\n    \"href\": \"https://blooming-journey-07077.herokuapp.com/\",\n    \"parentName\": \"p\"\n  }, \"link\"), \" to the app on Heroku. To check out my code on Github, click \", mdx(\"a\", {\n    \"href\": \"https://github.com/charlotteresnick/Drink-Finder\",\n    \"parentName\": \"p\"\n  }, \"here\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"I’ve been in full project mode all week and got a chance to really flex my SQL muscles again when I was creating a dropdown button that…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/holy-sql","formatString":"MM.DD.YYYY"}},"staticQueryHashes":["2849846852","2849846852","318001574"]}