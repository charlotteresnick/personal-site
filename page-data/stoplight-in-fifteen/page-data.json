{"componentChunkName":"component---src-templates-post-query-tsx","path":"/stoplight-in-fifteen","result":{"data":{"post":{"__typename":"MdxPost","slug":"/stoplight-in-fifteen","title":"Week Seven - 15 Minute Stoplight","date":"08.21.2020","tags":[{"name":"General","slug":"general"},{"name":"React","slug":"react"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Week Seven - 15 Minute Stoplight\",\n  \"date\": \"2020-08-21T00:00:00.000Z\",\n  \"slug\": \"/stoplight-in-fifteen\",\n  \"tags\": [\"General\", \"React\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This week was all about React. We covered off on some basic whiteboarding problems, building a recipes app, creating some website mockups, forms, yarn versus npm, state and useState, React hooks, as well as components and props.\"), mdx(\"p\", null, \"Up until this point, I had heard that React is like a bulldozer compared to the technologies I had been using until now. I didn\\u2019t get it. Now I do.\"), mdx(\"p\", null, \"My React-Is-Indeed-A-Bulldozer aha moment went as follows: one of our morning exercises was to build a stoplight, a task I was required to complete in JavaScript as part of my application for General Assembly and something I genuinely struggled with at the time (it also took the better part of an afternoon). And I did it this time around in React, in 15 minutes. Plus I did all of the styling. And it wasn\\u2019t that hard? Bizarre. Bulldozer, I got it.\"), mdx(\"p\", null, \"Give my stoplight a go:\"), mdx(\"pre\", null, mdx(\"code\", {\n    \"className\": \"language-js\",\n    \"metastring\": \"react-live\",\n    \"react-live\": true,\n    \"parentName\": \"pre\"\n  }, \"function App() {\\n  const [selectedLight, setSelectedLight] = React.useState(\\\"stop\\\")\\n\\n  return (\\n    <div\\n      style={{\\n        display: \\\"flex\\\",\\n        flexDirection: \\\"row\\\",\\n        height: \\\"400px\\\",\\n        justifyContent: \\\"center\\\",\\n      }}\\n    >\\n      <ButtonPannel setSelectedLight={setSelectedLight} />\\n      <Stoplight selectedLight={selectedLight} />\\n    </div>\\n  )\\n}\\n\\nfunction ButtonPannel(props) {\\n  const { setSelectedLight } = props\\n  const buttonStyle = {\\n    width: \\\"100px\\\",\\n    height: \\\"40px\\\",\\n    fontSize: \\\"20px\\\",\\n    backgroundColor: \\\"lightslategray\\\",\\n    color: \\\"white\\\",\\n    border: \\\"lightslategray\\\",\\n    borderRadius: \\\"10px\\\",\\n    marginRight: \\\"10px\\\",\\n  }\\n  return (\\n    <div\\n      style={{\\n        height: \\\"350px\\\",\\n        width: \\\"100px\\\",\\n        display: \\\"flex\\\",\\n        flexDirection: \\\"column\\\",\\n        justifyContent: \\\"space-evenly\\\",\\n        alignItems: \\\"center\\\",\\n      }}\\n    >\\n      <button style={buttonStyle} onClick={() => setSelectedLight(\\\"stop\\\")}>\\n        Stop\\n      </button>\\n      <button style={buttonStyle} onClick={() => setSelectedLight(\\\"slow\\\")}>\\n        Slow\\n      </button>\\n      <button style={buttonStyle} onClick={() => setSelectedLight(\\\"go\\\")}>\\n        Go\\n      </button>\\n    </div>\\n  )\\n}\\n\\nfunction Stoplight(props) {\\n  const { selectedLight } = props\\n  const lightStyle = {\\n    height: \\\"100px\\\",\\n    width: \\\"100px\\\",\\n    border: \\\"2px solid black\\\",\\n    borderRadius: \\\"50px\\\",\\n  }\\n  console.log(selectedLight)\\n  const stop = (\\n    <div\\n      style={{\\n        ...lightStyle,\\n        backgroundColor: selectedLight === \\\"stop\\\" ? \\\"red\\\" : \\\"gray\\\",\\n      }}\\n    ></div>\\n  )\\n  const slow = (\\n    <div\\n      style={{\\n        ...lightStyle,\\n        backgroundColor: selectedLight === \\\"slow\\\" ? \\\"yellow\\\" : \\\"gray\\\",\\n      }}\\n    ></div>\\n  )\\n  const go = (\\n    <div\\n      style={{\\n        ...lightStyle,\\n        backgroundColor: selectedLight === \\\"go\\\" ? \\\"green\\\" : \\\"gray\\\",\\n      }}\\n    ></div>\\n  )\\n\\n  return (\\n    <div\\n      style={{\\n        display: \\\"flex\\\",\\n        flexDirection: \\\"column\\\",\\n        justifyContent: \\\"space-evenly\\\",\\n        alignItems: \\\"center\\\",\\n        height: \\\"350px\\\",\\n        width: \\\"150px\\\",\\n        backgroundColor: \\\"lightslategrey\\\",\\n        border: \\\"lightslategrey\\\",\\n        borderRadius: \\\"40px\\\",\\n        marginLeft: \\\"10px\\\",\\n      }}\\n    >\\n      {stop}\\n      {slow}\\n      {go}\\n    </div>\\n  )\\n}\\n\\nrender(<App />)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"This week was all about React. We covered off on some basic whiteboarding problems, building a recipes app, creating some website mockupsâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/stoplight-in-fifteen","formatString":"MM.DD.YYYY"}},"staticQueryHashes":["2849846852","2849846852","318001574"]}