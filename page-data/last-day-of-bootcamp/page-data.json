{"componentChunkName":"component---src-templates-post-query-tsx","path":"/last-day-of-bootcamp","result":{"data":{"post":{"__typename":"MdxPost","slug":"/last-day-of-bootcamp","title":"Last Day - Project Four, Admin Dash Done","date":"09.28.2020","tags":[{"name":"Projects","slug":"projects"},{"name":"React","slug":"react"},{"name":"General","slug":"general"}],"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Last Day - Project Four, Admin Dash Done\",\n  \"date\": \"2020-09-28T00:00:00.000Z\",\n  \"slug\": \"/last-day-of-bootcamp\",\n  \"banner\": \"/images/banner.jpg\",\n  \"tags\": [\"Projects\", \"React\", \"General\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"And that's it, folks. I'm done. I'm tired. I'm really proud of my project. And I'm sad to see bootcamp go.\"), mdx(\"p\", null, \"But before I get into bootcamp reflections, here's a look at my admin dashboard:\"), mdx(\"p\", null, \"Users table:\"), mdx(\"img\", {\n    src: \"/images/admindashusers.png\",\n    alt: \"Admin Dashboard Users Table\",\n    width: \"100%\"\n  }), mdx(\"p\", null, \"Classes table:\"), mdx(\"img\", {\n    src: \"/images/admindashclasses.png\",\n    alt: \"Admin Dashboard Classes Table\",\n    width: \"100%\"\n  }), mdx(\"p\", null, \"With React table, Chakra UI, and Material UI, I was able to build exactly what I wanted in the admin dashboard. Admin can edit user information, which is prepopulated when an admin clicks on the 'Edit' action on a user row:\"), mdx(\"img\", {\n    src: \"/images/edituserinfo.png\",\n    alt: \"Edit User Information Modal\",\n    width: \"100%\"\n  }), mdx(\"p\", null, \"Create new and edit preexsiting classes using the 'Add Class' button or 'Edit' action on the Admin Classes table:\"), mdx(\"img\", {\n    src: \"/images/createclass1.png\",\n    alt: \"Create Class Modal\",\n    width: \"100%\"\n  }), mdx(\"p\", null, \"(Class time edit dropdown I created using Material UI):\"), mdx(\"img\", {\n    src: \"/images/editclasstime.png\",\n    alt: \"Edit Class Time Dropdown\",\n    width: \"100%\"\n  }), mdx(\"p\", null, \"Between reading and implementation, building out the admin dashboard took much longer than I had anticipated, which meant I was only able to read about how to integrate Stripe. Regardless, I'm planning to have that done this week and will write about how that goes.\"), mdx(\"p\", null, \"I built the site using PostgreSQL, Express, React, and Nodejs. Having learned about Rails towards the end of the bootcamp (and really digging it), I used Objectionjs; an ORM which, unfortunately, doesn't have a built in query builder. As such, I used Knex to handle query building. Using Objection with Knex allowed me to set up my relations in a way similar to Rails, enabling me to write the way I wanted without having to context switch between Rails and JavaScript.\"), mdx(\"p\", null, \"Overall, I'm impressed! I have a lot of ideas for what I'd like to add to the site during my free time (by free time I mean the time I have between interview prep and more interview prep).\"), mdx(\"p\", null, \"Check back for more updates! And here's a \", mdx(\"a\", {\n    \"href\": \"https://github.com/charlotteresnick/charlotte-resnick-yoga\",\n    \"parentName\": \"p\"\n  }, \"link\"), \" to my Project 4 repo.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"And that's it, folks. I'm done. I'm tired. I'm really proud of my project. And I'm sad to see bootcamp go. But before I get into bootcampâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/last-day-of-bootcamp","formatString":"MM.DD.YYYY"}},"staticQueryHashes":["2849846852","2849846852","318001574"]}